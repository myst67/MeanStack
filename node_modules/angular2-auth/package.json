{
  "_args": [
    [
      {
        "raw": "angular2-auth",
        "scope": null,
        "escapedName": "angular2-auth",
        "name": "angular2-auth",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\sapient laptop\\project\\MEA2N\\mean-magento"
    ]
  ],
  "_from": "angular2-auth@latest",
  "_id": "angular2-auth@0.1.7",
  "_inCache": true,
  "_location": "/angular2-auth",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/angular2-auth-0.1.7.tgz_1495973775193_0.7838315872941166"
  },
  "_npmUser": {
    "name": "itsdizzy",
    "email": "itsdizzy40@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular2-auth",
    "scope": null,
    "escapedName": "angular2-auth",
    "name": "angular2-auth",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular2-auth/-/angular2-auth-0.1.7.tgz",
  "_shasum": "c8ac614e70c5437f94c73a4e5788427e9a0bb079",
  "_shrinkwrap": null,
  "_spec": "angular2-auth",
  "_where": "E:\\sapient laptop\\project\\MEA2N\\mean-magento",
  "author": {
    "name": "Dizzy",
    "email": "itsdizzy40@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/ItsDizzy/angular2-auth/issues"
  },
  "dependencies": {},
  "description": "Provides an angular auth module to handle authentication based on JWT",
  "devDependencies": {
    "@angular/common": "^4.0.1",
    "@angular/core": "^4.0.1",
    "@angular/http": "^4.0.1",
    "@angular/platform-browser": "^4.0.1",
    "@angular/router": "^4.0.1",
    "reflect-metadata": "^0.1.10",
    "rxjs": "^5.2.0",
    "typescript": "^2.2.2",
    "zone.js": "^0.8.5"
  },
  "directories": {},
  "dist": {
    "shasum": "c8ac614e70c5437f94c73a4e5788427e9a0bb079",
    "tarball": "https://registry.npmjs.org/angular2-auth/-/angular2-auth-0.1.7.tgz"
  },
  "gitHead": "18654235351e05d71e5bc98dac49ca28332cb0e7",
  "homepage": "https://github.com/ItsDizzy/angular2-auth#readme",
  "keywords": [
    "angular",
    "angular2",
    "authentication",
    "jwt",
    "module",
    "helper"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "itsdizzy",
      "email": "itsdizzy40@gmail.com"
    }
  ],
  "name": "angular2-auth",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/common": "^4.0.1",
    "@angular/core": "^4.0.1",
    "@angular/http": "^4.0.1",
    "@angular/router": "^4.0.1"
  },
  "readme": "# angular2-auth\r\n[![npm version][ico-version]][link-npm]\r\n[![license][ico-license]][link-npm]\r\n\r\nProvides an angular2 auth module to handle authentication based on JWT\r\n\r\n## Where can I use this for?\r\nThis library is useful for automatically attaching a JSON Web Token as an Authorization header when making HTTP requests in your Angular 2 Application. It has a TokenStorage Service that will store the latest Token and the Token class will add some nice helper functions in order to decode the token and to find out when it will expire.\r\n\r\nAn important thing to note: This library does not have any opinion on how you should implement your user authentication and how you receive the JWT tokens. You are completely free to do that yourself, but in most cases you will use a normal HTTP request to authenticate your users and then save the JWT token in the TokenStorage if authentication was successful.\r\n\r\n## Instalation\r\n```\r\nnpm install angular2-auth\r\n```\r\nWhen that is done you will have to include the `AuthModule` into your root module:\r\n```ts\r\nimport { AuthModule } from 'angular2-auth';\r\n...\r\n@NgModule({\r\n  imports: [\r\n    ...\r\n    AuthModule.forRoot(),\r\n    ...\r\n  ],\r\n  ...\r\n})\r\nexport class AppModule {}\r\n```\r\nIn the forRoot function you can specify a custom config, more about that in the [Configuration](/#configuration) section.\r\n\r\nNow you are ready to implement the `TokenService` into your authentication service, a little example below:\r\n```ts\r\nimport { TokenService } from 'angular2-auth';\r\n...\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(private _http: Http, private _tokenService: TokenService) {}\r\n  \r\n  login(email: string, password: string) {\r\n    this._http.post('/auth/login', { email: email, password: password }).subscribe(\r\n      response => {\r\n        ...\r\n        this._tokenService.setToken(response.token);\r\n        ...\r\n      },\r\n      error => console.error(error),\r\n      () => console.log('login#done')\r\n    );\r\n  }\r\n  \r\n  logout() {\r\n    this._tokenService.removeToken();\r\n  }\r\n  \r\n  loggedIn() {\r\n    let token = this._tokenService.getToken();\r\n    \r\n    if(token && token.token) {\r\n      return !token.isExpired();\r\n    }\r\n    return false;\r\n  }\r\n}\r\n```\r\n\r\n## Sending Requests\r\nIf you want to send a request with the `Authorization` header set with the JWT token you can use the `AuthHttp` class.\r\n```ts\r\nimport { AuthHttp } from 'angular2-auth';\r\n...\r\n@Component({\r\n  ...\r\n})\r\nexport class AppComponent {\r\n  constructor(private _authHttp: AuthHttp) {}\r\n  \r\n  getThing() {\r\n    this._authHttp.get('/get/thing')\r\n      .subscribe(\r\n        data => this.thing = data,\r\n        error => console.error(error),\r\n        () => console.log('getThing#done')\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n[ico-version]: https://img.shields.io/npm/v/angular2-auth.svg\r\n[ico-license]: https://img.shields.io/npm/l/angular2-auth.svg\r\n\r\n[link-npm]: https://www.npmjs.com/package/angular2-auth\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ItsDizzy/angular2-auth.git"
  },
  "scripts": {
    "dev": "tsc --watch",
    "prepublish": "tsc",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "typings": "dist/index.d.ts",
  "version": "0.1.7"
}
